params {
    // Input/Output directories
    data_dir = './data'
    results_dir = './results'
    config_dir = './config'
    
    // Benchmark configuration
    benchmarks_config = "${config_dir}/benchmarks.yaml"
    frameworks_config = "${config_dir}/frameworks.yaml"
    hardware_config = "${config_dir}/hardware.yaml"
    
    // Execution parameters
    repetitions = 10
    confidence_level = 0.95
    enable_gpu = true
    enable_monitoring = true
    
    // Container settings
    container_registry = 'ghcr.io/rust-ml-benchmark'
    python_container = "${container_registry}/python-ml-benchmark:latest"
    rust_container = "${container_registry}/rust-ml-benchmark:latest"
    
    // Resource limits
    max_memory = '32.GB'
    max_cpus = 16
    max_time = '24.h'
}

// Execution profiles
profiles {
    local {
        executor.name = 'local'
        executor.cpus = 8
        executor.memory = '16 GB'
    }
    
    slurm {
        executor.name = 'slurm'
        executor.queueSize = 50
        process.queue = 'gpu'
        process.clusterOptions = '--gres=gpu:1'
    }
    
    docker {
        docker.enabled = true
        docker.userEmulation = true
        singularity.enabled = false
    }
    
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        docker.enabled = false
    }
}

// Process resource configuration
process {
    withLabel: 'cpu_intensive' {
        cpus = 8
        memory = '16.GB'
        time = '2.h'
    }
    
    withLabel: 'gpu_training' {
        cpus = 4
        memory = '32.GB'
        time = '6.h'
        clusterOptions = '--gres=gpu:1'
    }
    
    withLabel: 'memory_intensive' {
        cpus = 2
        memory = '64.GB'
        time = '4.h'
    }
} 